generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Owners {
  userId    BigInt    @id @unique
  name      String    @default("") @db.VarChar(128)
  username  String    @default("") @db.VarChar(128)
  limitShop Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  schools   Schools[]
}

model Schools {
  uuid          String          @id @default(uuid())
  owner         Owners?         @relation(fields: [ownerId], references: [userId])
  ownerId       BigInt?
  token         String          @unique @default("") @db.VarChar(128)
  title         String          @default("") @db.VarChar(256)
  direction     String          @default("") @db.VarChar(256)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  schoolModules SchoolModules[]
}

model Modules {
  id            Int             @id @default(autoincrement())
  slug          String          @unique @default("")
  title         String          @default("")
  hint          String          @default("")
  schoolModules SchoolModules[]
}

model SchoolModules {
  id         Int             @id @default(autoincrement())
  isFilled   Boolean         @default(false)
  index      Int             
  type       String          @default("") @db.VarChar(128)
  school     Schools?        @relation(fields: [schoolUuid], references: [uuid])
  schoolUuid String?
  module     Modules?        @relation(fields: [moduleId], references: [id])
  moduleId   Int?
  settings   Json
  children   SchoolModules[] @relation("children")
  parent     SchoolModules?  @relation("children", fields: [parentId], references: [id])
  parentId   Int?            @default(0)  @map("schoolModulesId")
}
